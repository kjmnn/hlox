fun ll(val, nxt) {
    fun get(key) {
        fun set(key, x) {
            if (key == 0)
                val = x;
            if (key == 1)
                nxt = x;
        }
        if (key == 0)
            return val;
        if (key == 1)
            return nxt;
        if (key == 2)
            return set;
    }
    return get;
}
fun printll(a) {
    for (a = a; a != nil; a = a(1);) print a(0);
}
fun sumll(a, init) {
    var res = init;
    for (a = a; a != nil; a = a(1);) res = res + a(0);
    return res;
}
fun mapll(f, a) {
    var res = ll(nil, nil);
    var cur = res;
    for (a = a; a != nil; a = a(1);) {
        cur(2)(0, f(a(0)));
        if (a(1)) {
            cur(2)(1, ll(nil, nil));
            cur = cur(1);
        }
    }
    return res;
}
fun appendll(a, b) {
    while (a(1) != nil)
        a = a(1);
    a(2)(1, b);
}
var a = ll(1, nil);
var t = clock();
for (var i = 2; i <= 1000; i = i + 1;) {
    appendll(a, ll(i, nil));
}
print clock() - t;
print sumll(a, 0);
print sumll(mapll(to_string, a), "");
